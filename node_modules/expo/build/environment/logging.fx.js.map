{"version":3,"file":"logging.fx.js","sourceRoot":"","sources":["../../src/environment/logging.fx.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAEvC,sGAAsG;AACtG,IAAI,OAAO,EAAE;IACX,IAAI,SAAS,CAAC,sBAAsB,EAAE,MAAM,EAAE;QAC5C,gGAAgG;QAChG,0GAA0G;QAC1G,IAAI,CAAC,qBAAqB,EAAE,EAAE;YAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;YACrC,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;aAAM;YACL,MAAM,aAAa,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC;YAC/D,aAAa,CAAC,qBAAqB,CAAC,MAAM,EAAE,EAAE,EAAE;gBAC9C,uFAAuF;aACxF,CAAC,CAAC;SACJ;KACF;CACF;AACD;;;;GAIG;AACH,SAAS,qBAAqB;IAC5B,OAAO,SAAS,EAAE,OAAO,KAAK,OAAO,CAAC;AACxC,CAAC","sourcesContent":["import Constants from 'expo-constants';\n\n// Metro and terser don't seem to be capable of shaking the imports unless they're wrapped in __DEV__.\nif (__DEV__) {\n  if (Constants.__unsafeNoWarnManifest?.logUrl) {\n    // Enable logging to the Expo dev tools only if this JS is not running in a web browser (ex: the\n    // remote debugger). In Expo Web we don't show console logs in the CLI, so there's no special case needed.\n    if (!isRunningInWebBrowser()) {\n      const Logs = require('../logs/Logs');\n      Logs.enableExpoCliLogging();\n    } else {\n      const RemoteLogging = require('../logs/RemoteLogging').default;\n      RemoteLogging.enqueueRemoteLogAsync('info', {}, [\n        'You are now debugging remotely; check your browser console for your application logs.',\n      ]);\n    }\n  }\n}\n/**\n * In all web browsers navigator.product is \"Gecko\" for compatibility reasons.\n * See https://developer.mozilla.org/en-US/docs/Web/API/NavigatorID/product\n * and the discussion at https://github.com/expo/expo/pull/8807#discussion_r441391148.\n */\nfunction isRunningInWebBrowser() {\n  return navigator?.product === 'Gecko';\n}\n"]}